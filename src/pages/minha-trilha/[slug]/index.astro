---
import { type CollectionEntry, getCollection } from "astro:content";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import getSortedPrivatePosts from "@utils/getSortedPrivatePosts";
import MyLearningPath from "@layouts/MyLearningPath.astro";
import PostPrivateDetails from "@layouts/PostPrivateDetails.astro";

export interface Props {
  post: CollectionEntry<"private">;
}

export async function getStaticPaths() {
  const posts = await getCollection("private", ({ data }) => !data.draft && data.students?.length);

  const postResult = posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection("private");

const sortedPosts = getSortedPrivatePosts(posts);

const pagination = getPagination({
  posts: sortedPosts,
  page: slug,
});
---

{post ? <PostPrivateDetails post={post} /> : <MyLearningPath {...pagination} />}